<#@ template language="C#" debug="True" #>
<#@ output extension="cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="$(SolutionDir)Admin\bin\Admin.Compoent.Tool.Dll" #>
<#@ import namespace="System.IO" #>
<#@ Import Namespace="System.Linq" #>
<#@ Import Namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ Import Namespace="System.Collections.Generic" #>
<#@ Import Namespace="Admin.Compoent.Tool" #>
<#@ Import Namespace="Admin.Compoent.Tool.T4" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="EntityConfigurationTemplate.tt" #>

<#
    string currentPath = Path.GetDirectoryName(Host.TemplateFile);
    string projectPath =currentPath.Substring(0, currentPath.IndexOf(@"\T4"));
    string solutionPath = currentPath.Substring(0, currentPath.IndexOf(@"\Admin.Demo.Core.Data"));

    string modelFile= Path.Combine(solutionPath, @"Admin.Demo.Core.Models\bin\Debug\Admin.Demo.Core.Models.dll");
    byte[] fileData= File.ReadAllBytes(modelFile);
    Assembly assembly = Assembly.Load(fileData);
    IEnumerable<Type> modelTypes = assembly.GetTypes().Where(m => typeof(EntityBase<int>).IsAssignableFrom(m) && !m.IsAbstract);
    foreach(Type modelType in modelTypes)
    {
        T4ModelInfo model = new T4ModelInfo(modelType);
        //实体映射类
        EntityConfigurationTemplate config = new EntityConfigurationTemplate(model);
        string path = string.Format(@"{0}\Configurations", projectPath);
        config.Output.Encoding = Encoding.UTF8;
        config.RenderToFile(Path.Combine(path, config.FileName));
    }
#>